# https://dplyr.tidyverse.org/articles/dplyr.html - the basic
# https://dplyr.tidyverse.org/articles/grouping.html - group by in details
# https://dplyr.tidyverse.org/articles/base.html - comparing dplyr functions
# to the base R function.

# Update your quantmod library, or you might not be able to download the data.
# version should be 0.4.2.
# Here is a link to discussion of the problem with getting data from yahoo.
# https://github.com/joshuaulrich/quantmod/issues/358

library(tidyverse)
library(tidyquant)
library(lubridate)

#####Problem 1#####
# Write the following functions:
# 1.1. A function which replicates the SMA function. It should calculate the SMA
# for a vector to the left:
# 1.2. A function, which calculates the correlation coefficient between two vectors.
# It should replicate the cor function from the base package.
#####Problem 1.1#####

SMAFunction <- function(InputVector, InputLength, direction){
    SMA <- NULL
    for(i in 1:length(InputVector)){
      average <- mean(InputVector[i:(i+(InputLength-1))])
      SMA <- c(SMA, average)
    } 
    SMA <- c(rep(NA, InputLength-1), SMA)
    SMA <- SMA[1: length(InputVector)] #because i get two additional NAs, that is why i select
    print(SMA)
}

SMAFunction(data, 3)
SMA(data, 3)

#I can probably make it in a much better way but i can't think of one just now. And also its direction is to the right.


test <- tq_get("AMZN", from= "2022-01-01", to = "2022-04-30")
Test1 <- test%>%
  mutate(SMAFunction10 = SMAFunction(adjusted, 10), SMA10 = SMA(adjusted, 10))

#It seems to work, but because i have a print command in the function it prints the calculated cells in the console.
#if i remove the print command, then it does not work as the original function (prints for a simple vector and doesn't for mutate in data frames)

####Problem 1.2####



#####Problem 2#####
# Find all prime numbers less than 100, using for/while loops.
#####Problem 2#####


#####Problem 3#####
# Read the wikipedia article and investopedia article on MACD:
# https://en.wikipedia.org/wiki/MACD
# https://www.investopedia.com/terms/m/macd.asp

# Download data for a stock of your choice and do the following:
# 1.Calculate the 26-period EMA(use the EMA function from tidyquant)
# 2.Calculate the 12-period EMA.
# 3.Calculate the MACD line(12-period EMA minus 26-period EMA)
# 4.Calculate the signal line - this is the 9-period EMA of the MACD.
# 5.Calculate the buy/sell signals. This means create a new column which tell
# us if we should buy or sell. When the MACD line crosses the signal line
# from above(MACD is above signal then MACD is below signal) this is a sell signal. 
# If it crosses from below (MACD is below signal then MACD is above signal) this is a buy signal.
# 6. Simulate how the strategy preforms and compare it to a benchmark strategy
# of just buying and holding the stock.
# In order to do this start with a portfolio of 100$ invested in the stock on the first day
# and see how it performs. Example:
# I start with 100$ and a stock which costs 100$ at the beginning of my time period.
# I get a buy signal when the stock price is 90. I buy the stock.
# I get a sell signal to sell the stock when the price is 110. I sell it and 
# and don't get any more signals.I end up with 100 * 110 / 90 = 122.22 
# The benchmark portfolio is I buy the stock at 100 at the beginning and at
# the end of the period the stock price is 120. I end up with 120.
# 122.22 > 120. so the MACD strategy was beating the market.
#####Problem 3#####


Data <- tq_get("TSLA",
               get = "stock.prices",
               from = "2021-01-01",
               to = "2022-04-30")
Dates<- data.frame(Date = seq.Date(from = ymd("2021-01-01"),
                            to = ymd("2022-04-30"),
                            by = "day"))
DataCorr <- Dates%>%
  left_join(Data, by = c("Date"="date"))%>%
  select(symbol, Date, adjusted)%>%
  fill(c(symbol, adjusted), .direction = "updown")

Signal <- DataCorr %>%
  mutate(EMA26 = EMA(adjusted, n = 26),
         EMA12 = EMA(adjusted, n = 12), 
         MACD = EMA12-EMA26,
         signal_line = EMA(MACD, n = 9))%>%
  filter(!is.na(EMA26 & signal_line))%>%
  mutate("buy/sell" = case_when(MACD > signal_line & lag(MACD) < lag(signal_line)~"buy",
                                MACD < signal_line & lag(MACD) > lag(signal_line)~"sell"))%>%
                                
  mutate(ProfitCoeff = (adjusted/lag(adjusted)),
         ProfitCoeff = ifelse(is.na(ProfitCoeff), 1, ProfitCoeff),
         BenchmarkMoney = 100,
         BenchmarkMoney1 = cumprod(ProfitCoeff),
         StrategyMoney = 100,
         ProfitCoeff1 = case_when("buy/sell" == "sell" ~ 1,
                                 "buy/sell" == "buy" ~ ProfitCoeff ),
         StrategyMoney1 = cumprod (ProfitCoeff1)) #the elaborations in class
        

  

#The buy/sell signals are not working as they should be working. They are inverse.


#Upload your homeworks on your own github repo and send me an email, when you are done.
